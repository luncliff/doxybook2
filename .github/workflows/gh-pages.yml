name: "GitHub Pages"

on:
  workflow_dispatch:
  push:
    branches:
      - "main"
      - "docs"
      - "update/gh-actions"
    paths:
      - '.github/workflows/gh-pages.yml'

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  generate:
    name: "Generate Pages"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: actions/cache@v4
        with:
          path: |
            /var/cache/apt/archives
          key: apt-${{ runner.os }}-${{ hashFiles('.github/workflows/gh-pages.yml') }}
          restore-keys: |
            apt-${{ runner.os }}-
      - name: "Run apt"
        run: sudo apt install -y -q pkg-config ninja-build zip unzip doxygen

      - uses: lukka/run-vcpkg@v11
        with:
          vcpkgDirectory: "${{ runner.tool_cache }}/vcpkg"
          vcpkgGitCommitId: "6f29f12e82a8293156836ad81cc9bf5af41fe836" # 2025.01.13
          runVcpkgInstall: true
          vcpkgJsonGlob: 'vcpkg.json'
      - uses: lukka/run-cmake@v10
        with:
          workflowPreset: linux-amd64
      - name: "Run cmake and install"
        run: |
          cmake --build --preset "x64-linux-debug" --target install
          sudo cp install/bin/doxybook2 /usr/local/bin/doxybook2
          sudo chmod +x /usr/local/bin/doxybook2
          doxybook2 --version

      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: "Run npm"
        run: sudo npm install gitbook-cli -g

      - uses: actions/setup-python@v5
        with:
          python-version: 3.13
          cache: 'pip'
      - name: "Run pip"
        run: pip install -r requirements-sample.txt

      - name: "Run Doxygen(example)"
        run: doxygen
        working-directory: example

      - name: MkDocs - ReadTheDocs
        id: example-readthedocs
        continue-on-error: true
        shell: bash
        run: |
          doxybook2 \
            --input ./example/doxygen/xml \
            --output ./example/mkdocs-readthedocs/docs \
            --config ./example/mkdocs-readthedocs/.doxybook/config.json
          cd ./example/mkdocs-readthedocs
          mkdocs build
          cp -r ./site ${{ github.workspace }}/public/mkdocs-readthedocs

      - name: MkDocs - Material
        id: example-material
        continue-on-error: true
        shell: bash
        run: |
          doxybook2 \
            --input ./example/doxygen/xml \
            --output ./example/mkdocs-material/docs \
            --config ./example/mkdocs-material/.doxybook/config.json
          cd ./example/mkdocs-material
          mkdocs build
          cp -r ./site ${{ github.workspace }}/public/mkdocs-material

      - name: MkDocs - Bootswatch
        id: example-bootswatch
        continue-on-error: true
        shell: bash
        run: |
          doxybook2 \
            --input ./example/doxygen/xml \
            --output ./example/mkdocs-bootswatch/docs \
            --config ./example/mkdocs-bootswatch/.doxybook/config.json
          cd ./example/mkdocs-bootswatch
          mkdocs build
          cp -r ./site ${{ github.workspace }}/public/mkdocs-bootswatch

      - name: Hugo - Learn
        id: example-hugo-learn
        continue-on-error: true
        shell: bash
        run: |
          doxybook2 \
            --input ./example/doxygen/xml \
            --output ./example/hugo-learn/content \
            --config ./example/hugo-learn/.doxybook/config.json \
            --templates ./example/hugo-learn/.doxybook/templates
          cd ./example/hugo-learn
          hugo
          cp -r ./public ${{ github.workspace }}/public/hugo-learn

      - name: Hugo - Book
        id: example-hugo-book
        continue-on-error: true
        shell: bash
        run: |
          doxybook2 \
            --input ./example/doxygen/xml \
            --output ./example/hugo-book/content \
            --config ./example/hugo-book/.doxybook/config.json \
            --templates ./example/hugo-book/.doxybook/templates
          cd ./example/hugo-book
          hugo
          cp -r ./public ${{ github.workspace }}/public/hugo-book

      # - name: Download VuePress # Disabled due to VuePress not supporting Vue 3.x
      #   shell: bash
      #   run: |
      #     sudo npm install vuepress vue-template-compiler -g

      # - name: VuePress - Default # Disabled due to VuePress not supporting Vue 3.x
      #   shell: bash
      #   run: |
      #     doxybook2 \
      #       --input ./example/doxygen/xml \
      #       --output ./example/vuepress \
      #       --config ./example/vuepress/.doxybook/config.json
      #     cd ./example/vuepress
      #     sudo vuepress build
      #     cp -r ./.vuepress/dist ${{ github.workspace }}/public/vuepress

      - name: GitBook - Default
        id: example-gitbook
        continue-on-error: true
        shell: bash
        run: |
          doxybook2 \
            --input ./example/doxygen/xml \
            --output ./example/gitbook \
            --config ./example/gitbook/.doxybook/config.json \
            --summary-input ./example/gitbook/SUMMARY.md.tmpl \
            --summary-output ./example/gitbook/SUMMARY.md
          cd ./example/gitbook
          gitbook build
          cp -r ./_book ${{ github.workspace }}/public/gitbook

  deploy:
    name: "Deploy Pages"
    needs: [generate]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: actions/cache@v4
        with:
          path: |
            /var/cache/apt/archives
          key: apt-${{ runner.os }}-${{ hashFiles('.github/workflows/gh-pages.yml') }}
          restore-keys: |
            apt-${{ runner.os }}-
      - name: "Run apt"
        run: sudo apt install -y -q pkg-config ninja-build zip unzip doxygen

      - uses: lukka/run-vcpkg@v11
        with:
          vcpkgDirectory: "${{ runner.tool_cache }}/vcpkg"
          vcpkgGitCommitId: "6f29f12e82a8293156836ad81cc9bf5af41fe836" # 2025.01.13
          runVcpkgInstall: true
          vcpkgJsonGlob: 'vcpkg.json'
      - uses: lukka/run-cmake@v10
        with:
          workflowPreset: linux-amd64
      - name: "Run cmake and install"
        run: |
          cmake --build --preset "x64-linux-debug" --target install
          sudo cp install/bin/doxybook2 /usr/local/bin/doxybook2
          sudo chmod +x /usr/local/bin/doxybook2
          doxybook2 --version

      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: "Run npm"
        run: sudo npm install gitbook-cli -g

      - uses: actions/setup-python@v5
        with:
          python-version: 3.13
          cache: 'pip'
      - name: "Run pip"
        run: pip install -r requirements-sample.txt

      - name: "Run Doxygen(example)"
        run: doxygen
        working-directory: example

      - name: MkDocs - ReadTheDocs
        continue-on-error: true
        shell: bash
        run: |
          doxybook2 \
            --input ./example/doxygen/xml \
            --output ./example/mkdocs-readthedocs/docs \
            --config ./example/mkdocs-readthedocs/.doxybook/config.json
          cd ./example/mkdocs-readthedocs
          mkdocs build
          cp -r ./site ${{ github.workspace }}/public/mkdocs-readthedocs

      - uses: actions/configure-pages@v5
      - uses: actions/upload-pages-artifact@v3
        with:
          path: 'public'
      - uses: actions/deploy-pages@v4
